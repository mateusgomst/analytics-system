
services:
  api:
    build:
      context: .
      dockerfile: Analytics.API/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-api
    ports:
      - "${API_PORT}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - Redis__Host=redis
      - RabbitMQ__HostName=${RABBITMQ_HOST}
      - RabbitMQ__UserName=${RABBITMQ_USER}
      - RabbitMQ__Password=${RABBITMQ_PASS}
      - RabbitMQ__Port=${RABBITMQ_NODE_PORT}
    depends_on:
      postgres:
        condition: service_started # O PostgreSQL geralmente não precisa de healthcheck complexo para "ready"
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy # <-- A API só iniciará quando o RabbitMQ estiver saudável

  postgres:
    image: postgres:16
    container_name: ${COMPOSE_PROJECT_NAME}-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    ports:
      - "${REDIS_PORT}:6379"

  rabbitmq:
    image: rabbitmq:3-management # Imagem com plugin de gerenciamento
    container_name: ${COMPOSE_PROJECT_NAME}-rabbitmq
    ports:
      - "${RABBITMQ_NODE_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    healthcheck: # <-- Adicionado healthcheck para o RabbitMQ
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"] # Comando para verificar a conectividade da porta AMQP
      interval: 5s # Frequência da verificação
      timeout: 10s # Tempo limite para o comando
      retries: 5 # Número de tentativas antes de considerar o serviço unhealthy
      start_period: 20s # Período inicial para o serviço se estabilizar antes de começar as verificações

volumes:
  pgdata: